name: üöÄ Deploy to VPS (Smart + Cached)

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy via SSH
    runs-on: ubuntu-latest

    env:
      DEBUG: true # Toggle to true for verbose logging

    steps:
      # ---------------------------------------
      # 1Ô∏è‚É£ Checkout repository
      # ---------------------------------------
      - name: ‚è≥ Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ---------------------------------------
      # 2Ô∏è‚É£ Setup Node.js + PNPM + Caching
      # ---------------------------------------
      - name: üß∞ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üì¶ Cache PNPM Store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: ‚ö° Install PNPM
        run: |
          npm install -g pnpm
          echo "‚úÖ PNPM version: $(pnpm --version)"

      # ---------------------------------------
      # 3Ô∏è‚É£ Setup SSH
      # ---------------------------------------
      - name: üîê Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # ---------------------------------------
      # 4Ô∏è‚É£ Deploy to VPS
      # ---------------------------------------
      - name: üöÄ Deploy to VPS
        env:
          VPS_USER: ${{ secrets.USER }}
          VPS_HOST: ${{ secrets.QUARK_VPS_HOST }}
          VPS_PORT: ${{ secrets.QUARK_VPS_PORT }}
          GIT_AUTH_TOKEN: ${{ secrets.GIT_AUTH_TOKEN }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          DEBUG: ${{ env.DEBUG }}
        run: |
          echo "üåç Connecting to VPS: $VPS_HOST:$VPS_PORT as $VPS_USER"
          echo "üìÇ Target Path: $DEPLOY_PATH"

          if [ "$DEBUG" = "true" ]; then
            echo "üß© DEBUG MODE ENABLED ‚Äî detailed logs will be shown"
            set -x
          fi

          ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST -p $VPS_PORT "
            set -e
            echo 'üñ•Ô∏è Connected successfully to ' \$(hostname)
            echo 'üì¶ Starting deployment in: $DEPLOY_PATH'

            if [ ! -d '$DEPLOY_PATH/.git' ]; then
              echo '‚ùå ERROR: .git folder not found in $DEPLOY_PATH'
              echo 'üîç Run ls -a in that directory to confirm.'
              exit 1
            fi

            cd '$DEPLOY_PATH'

            echo 'üîÑ Pulling latest code from master...'
            git fetch origin master
            git reset --hard origin/master

            echo 'üì• Installing dependencies (using pnpm)...'
            pnpm install --frozen-lockfile

            echo '‚öôÔ∏è Building project...'
            pnpm run build

            echo 'üîÅ Restarting PM2 service...'
            pm2 startOrRestart ecosystem.config.js --env production

            echo '‚úÖ Deployment completed successfully!'
            echo 'üìÖ Finished at: ' \$(date)
          "

          if [ "$DEBUG" = "true" ]; then
            set +x
            echo "üß© DEBUG MODE DISABLED ‚Äî end of logs"
          fi
