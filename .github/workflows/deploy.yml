name: üöÄ Deploy to VPS (Smart Deploy)

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy via SSH
    runs-on: ubuntu-latest

    env:
      DEBUG: true # Change to true to enable verbose logging

    steps:
      # ---------------------------------------
      # 1Ô∏è‚É£ Checkout the repository
      # ---------------------------------------
      - name: ‚è≥ Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ---------------------------------------
      # 2Ô∏è‚É£ Setup Node.js and PNPM (cached)
      # ---------------------------------------
      - name: üß∞ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: üì¶ Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      # ---------------------------------------
      # 3Ô∏è‚É£ Setup SSH Authentication
      # ---------------------------------------
      - name: üîê Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # ---------------------------------------
      # 4Ô∏è‚É£ Deploy to VPS
      # ---------------------------------------
      - name: üöÄ Deploy to VPS
        env:
          VPS_USER: ${{ secrets.USER }}
          VPS_HOST: ${{ secrets.QUARK_VPS_HOST }}
          VPS_PORT: ${{ secrets.QUARK_VPS_PORT }}
          GIT_AUTH_TOKEN: ${{ secrets.GIT_AUTH_TOKEN }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          DEBUG: ${{ env.DEBUG }}
        run: |
          echo "üåç Connecting to VPS: $VPS_HOST:$VPS_PORT as $VPS_USER"
          echo "üìÇ Target Path: $DEPLOY_PATH"

          if [ "$DEBUG" = "true" ]; then
            echo "üß© DEBUG MODE ENABLED ‚Äî showing detailed logs"
            set -x
          fi

          ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST -p $VPS_PORT << 'EOF'
            set -e  # Exit on any error
            echo "üñ•Ô∏è Connected successfully to $(hostname)"
            echo "üì¶ Starting deployment process..."

            echo "‚û°Ô∏è Navigating to project directory: $DEPLOY_PATH"
            cd $DEPLOY_PATH || { echo "‚ùå Directory not found: $DEPLOY_PATH"; exit 1; }

            echo "üîÑ Fetching latest code from GitHub..."
            git remote set-url origin https://x-access-token:${GIT_AUTH_TOKEN}@github.com/QQuarkInfotechProject/singingbowl-admin.git
            git fetch origin master
            git reset --hard origin/master

            echo "üì• Installing dependencies..."
            pnpm install --frozen-lockfile

            echo "‚öôÔ∏è Building project..."
            pnpm run build

            echo "üîÅ Restarting PM2 service..."
            pm2 startOrRestart ecosystem.config.js --env production

            echo "‚úÖ Deployment completed successfully!"
            echo "üìÖ Completed on: $(date)"
          EOF

          if [ "$DEBUG" = "true" ]; then
            set +x
            echo "üß© DEBUG MODE DISABLED ‚Äî end of verbose logs"
          fi
